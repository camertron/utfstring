import expect from "expect";
import { UtfVisualString } from "../../../../src/utf_visual_string";

describe("UtfVisualString", () => {
    describe("#charAt", () => {
        it("returns an object of type UtfVisualString", () => {
            const utfString = new UtfVisualString("abc");
            expect(utfString.charAt(0)).toBeInstanceOf(UtfVisualString);
        });

        it("works with standard ASCII characters", () => {
            const utfString = new UtfVisualString("abc");
            expect(utfString.charAt(0).toString()).toEqual("a");
            expect(utfString.charAt(1).toString()).toEqual("b");
            expect(utfString.charAt(2).toString()).toEqual("c");
        });

        it("works with multi-byte characters", () => {
            const utfString = new UtfVisualString("сЂѓсѓісЂїсЂесЂє"); // "arigatou"
            expect(utfString.charAt(0).toString()).toEqual("сЂѓ"); // "a"
            expect(utfString.charAt(1).toString()).toEqual("сѓі"); // "ri"
            expect(utfString.charAt(2).toString()).toEqual("сЂї"); // "ga"
            expect(utfString.charAt(3).toString()).toEqual("сЂе"); // "to"
            expect(utfString.charAt(4).toString()).toEqual("сЂє"); // "u"
        });

        it("works with astral plane unicode characters", () => {
            const utfString = new UtfVisualString("­цћБ­цћц­цћЦ­цћд");
            expect(utfString.charAt(0).toString()).toEqual("­цћБ");
            expect(utfString.charAt(1).toString()).toEqual("­цћц");
            expect(utfString.charAt(2).toString()).toEqual("­цћЦ");
            expect(utfString.charAt(3).toString()).toEqual("­цћд");
        });

        it("returns an empty string for indices that are out of range", () => {
            const utfString = new UtfVisualString("abc");
            expect(utfString.charAt(3).toString()).toEqual("");
        });

        it("works with regional indicators", () => {
            const utfString = new UtfVisualString("­ЪЄИ­ЪЄ┤­ЪЄФ­ЪЄи");
            expect(utfString.charAt(0).toString()).toEqual("­ЪЄИ­ЪЄ┤");
            expect(utfString.charAt(1).toString()).toEqual("­ЪЄФ­ЪЄи");
        });
    });
});
